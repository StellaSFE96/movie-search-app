{"version":3,"sources":["components/SearchBar.tsx","assets/images/default-poster.jpg","assets/icons/star.png","components/MovieCard.tsx","components/MovieList.tsx","API/api.ts","components/FeaturedMovies.tsx","components/PopularMovies.tsx","components/UpcomingMovies.tsx","assets/images/popcorn.avif","pages/HomePage.tsx","assets/icons/arrow-back.svg","components/MovieDetails.tsx","pages/MoviePage.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Searchbar","input","_templateObject2","SearchBar","_ref","onSearch","searchTerm","setSearchTerm","useState","debouncedTerm","setDebouncedTerm","useEffect","timerId","setTimeout","clearTimeout","_jsx","children","type","placeholder","value","onChange","e","target","Card","Poster","img","Title","h3","_templateObject3","Details","_templateObject4","ReleaseYear","p","_templateObject5","Rating","_templateObject6","StarIcon","_templateObject7","MovieCard","movie","movieDetailsUrl","concat","id","posterUrl","poster_path","defaultPoster","releaseYear","release_date","split","rating","vote_average","toFixed","Link","to","style","textDecoration","_jsxs","src","alt","title","Star","MovieList","movies","visibleMovies","setVisibleMovies","_Fragment","slice","map","length","ShowMoreButton","onClick","showMoreMovies","prevVisibleMovies","button","API_KEY","process","BASE_URL","FeaturedMoviesContainer","FeaturedMoviesTitle","h2","MovieGrid","FeaturedMovies","setMovies","async","response","axios","get","params","api_key","data","results","error","console","fetchMovies","topFiveMovies","PopularMoviesContainer","PopularMoviesTitle","PopularMovies","UpcomingMoviesContainer","UpcomingMoviesTitle","UpcomingMovies","Popcorn","HomePage","hasSearched","setHasSearched","handleSearch","useCallback","query","trim","$backgroundImage","props","Section","h1","Nav","nav","StyledLink","BackIcon","_templateObject8","_templateObject9","MovieDetails","movieId","setMovie","then","catch","imageUrl","runTime","runtime","genres","genre","name","join","overview","backArrow","MoviePage","useParams","HeaderContainer","header","Header","App","Router","basename","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"2OAGA,MAAMA,EAAYC,IAAOC,IAAGC,MAAAC,YAAA,kKAUtBC,EAAYJ,IAAOK,MAAKC,MAAAH,YAAA,2HA2CfI,I,cAAAA,EA9B6BC,IAAmB,IAAlB,SAAEC,GAAUD,EACvD,MAAOE,EAAYC,GAAiBC,mBAAS,KACtCC,EAAeC,GAAoBF,mBAASF,GAgBnD,OAdAK,qBAAU,KACR,MAAMC,EAAUC,YAAW,KACzBH,EAAiBJ,EAAW,GAC3B,KAEH,MAAO,KACLQ,aAAaF,EAAQ,CACtB,GACA,CAACN,IAEJK,qBAAU,KACRN,EAASI,EAAc,GACtB,CAACA,EAAeJ,IAGjBU,cAACpB,EAAS,CAAAqB,SACRD,cAACf,EAAS,CACRiB,KAAK,OACLC,YAAY,wBACZC,MAAOb,EACPc,SAAWC,GAAMd,EAAcc,EAAEC,OAAOH,UAEhC,ECpDD,MAA0B,2CCA1B,MAA0B,iCCWzC,MAAMI,EAAO3B,IAAOC,IAAGC,MAAAC,YAAA,iZAoBjByB,EAAS5B,IAAO6B,IAAGvB,MAAAH,YAAA,wIASnB2B,EAAQ9B,IAAO+B,GAAEC,MAAA7B,YAAA,+CAKjB8B,EAAUjC,IAAOC,IAAGiC,MAAA/B,YAAA,iGAUpBgC,EAAcnC,IAAOoC,EAACC,MAAAlC,YAAA,6CAKtBmC,EAAStC,IAAOC,IAAGsC,MAAApC,YAAA,uFAOnBqC,EAAWxC,IAAO6B,IAAGY,MAAAtC,YAAA,iEAgCZuC,I,IAAAA,EA1B6BlC,IAAgB,IAAf,MAAEmC,GAAOnC,EACpD,MAAMoC,EAAe,UAAAC,OAAaF,EAAMG,IAClCC,EAAYJ,EAAMK,YAAW,kCAAAH,OACGF,EAAMK,aACxCC,EAEEC,EAAcP,EAAMQ,aAAeR,EAAMQ,aAAaC,MAAM,KAAK,GAAK,MACtEC,EAASV,EAAMW,aAAeX,EAAMW,aAAaC,QAAQ,GAAK,MAEpE,OACEpC,cAACqC,IAAI,CAACC,GAAIb,EAAiBc,MAAO,CAAEC,eAAgB,QAASvC,SAC3DwC,eAACjC,EAAI,CAAAP,SAAA,CACHD,cAACS,EAAM,CAACiC,IAAKd,EAAWe,IAAKnB,EAAMoB,QACnC5C,cAACW,EAAK,CAAAV,SAAEuB,EAAMoB,QACdH,eAAC3B,EAAO,CAAAb,SAAA,CACND,cAACgB,EAAW,CAAAf,SAAE8B,IACdU,eAACtB,EAAM,CAAAlB,SAAA,CACPD,cAACqB,EAAQ,CAACqB,IAAKG,EAAMF,IAAI,cACxBT,YAIA,ECjEIY,MArB6BzD,IAAiB,IAAhB,OAAE0D,GAAQ1D,EACrD,MAAO2D,EAAeC,GAAoBxD,mBAAS,IAMnD,OACEgD,eAAAS,WAAA,CAAAjD,SAAA,CACED,cAACpB,EAAS,CAAAqB,SACP8C,EAAOI,MAAM,EAAGH,GAAeI,KAAK5B,GACnCxB,cAACuB,EAAS,CAAgBC,MAAOA,GAAjBA,EAAMG,QAGzBqB,EAAgBD,EAAOM,QACtBrD,cAACsD,EAAc,CAACC,QAZCC,KACrBP,GAAkBQ,GAAsBA,EAAoB,IAAG,EAWnBxD,SAAC,gBAE1C,EAMP,MAAMrB,EAAYC,IAAOC,IAAGC,MAAAC,YAAA,4JAUtBsE,EAAiBzE,IAAO6E,OAAMvE,MAAAH,YAAA,2P,YCvCpC,MAAM2E,EAAUC,mCACVC,EAAW,+B,UCGjB,MAAMC,EAA0BjF,IAAOC,IAAGC,MAAAC,YAAA,4CAKpC+E,EAAsBlF,IAAOmF,GAAE7E,MAAAH,YAAA,8EAM/BiF,EAAYpF,IAAOC,IAAG+B,MAAA7B,YAAA,0FAqCbkF,I,MAAAA,EA9BkBA,KAC/B,MAAOnB,EAAQoB,GAAa1E,mBAAkB,IAE9CG,qBAAU,KACYwE,WAClB,IACE,MAAMC,QDKLC,IAAMC,IAAG,GAAA7C,OAAoBmC,EAAQ,uBAAuB,CACjEW,OAAQ,CACNC,QAASd,KCNPQ,EAAUE,EAASK,KAAKC,QAC1B,CAAE,MAAOC,GACPC,QAAQD,MAAM,kCAAmCA,EACnD,GAGFE,EAAa,GACZ,IAEH,MAAMC,EAAgBhC,EAAOI,MAAM,EAAG,GAEtC,OACEV,eAACqB,EAAuB,CAAA7D,SAAA,CACtBD,cAAC+D,EAAmB,CAAA9D,SAAC,oBACrBD,cAACiE,EAAS,CAAAhE,SACP8E,EAAc3B,KAAI5B,GACjBxB,cAACuB,EAAS,CAAgBC,MAAOA,GAAjBA,EAAMG,UAGF,EC7C9B,MAAMqD,EAAyBnG,IAAOC,IAAGC,MAAAC,YAAA,4CAKnCiG,EAAqBpG,IAAOmF,GAAE7E,MAAAH,YAAA,sDAK9BiF,GAAYpF,IAAOC,IAAG+B,MAAA7B,YAAA,0FAsCbkG,I,SAAAA,GA/BiBA,KAC9B,MAAOnC,EAAQoB,GAAa1E,mBAAkB,IAE9CG,qBAAU,KACYwE,WAClB,IACE,MAAMC,QFXLC,IAAMC,IAAG,GAAA7C,OAAoBmC,EAAQ,kBAAkB,CAC5DW,OAAQ,CACNC,QAASd,KEUPQ,EAAUE,EAASK,KAAKC,QAC1B,CAAE,MAAOC,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,GAGFE,EAAa,GACZ,IAGH,MAAMC,EAAgBhC,EAAOI,MAAM,EAAG,GAEtC,OACEV,eAACuC,EAAsB,CAAA/E,SAAA,CACrBD,cAACiF,EAAkB,CAAAhF,SAAC,mBACpBD,cAACiE,GAAS,CAAAhE,SACP8E,EAAc3B,KAAI5B,GACjBxB,cAACuB,EAAS,CAAgBC,MAAOA,GAAjBA,EAAMG,UAGH,EC5C7B,MAAMwD,GAA0BtG,IAAOC,IAAGC,QAAAC,YAAA,4CAKpCoG,GAAsBvG,IAAOmF,GAAE7E,QAAAH,YAAA,sDAK/BiF,GAAYpF,IAAOC,IAAG+B,QAAA7B,YAAA,0FAqCbqG,I,GAAAA,GA9BkBA,KAC/B,MAAOtC,EAAQoB,GAAa1E,mBAAkB,IAE9CG,qBAAU,KACYwE,WAClB,IACE,MAAMC,QHFLC,IAAMC,IAAG,GAAA7C,OAAoBmC,EAAQ,mBAAmB,CAC7DW,OAAQ,CACNC,QAASd,KGCPQ,EAAUE,EAASK,KAAKC,QAC1B,CAAE,MAAOC,GACPC,QAAQD,MAAM,kCAAmCA,EACnD,GAGFE,EAAa,GACZ,IAEH,MAAMC,EAAgBhC,EAAOI,MAAM,EAAG,GAEtC,OACEV,eAAC0C,GAAuB,CAAAlF,SAAA,CACtBD,cAACoF,GAAmB,CAAAnF,SAAC,oBACrBD,cAACiE,GAAS,CAAAhE,SACP8E,EAAc3B,KAAI5B,GACjBxB,cAACuB,EAAS,CAAgBC,MAAOA,GAAjBA,EAAMG,UAGF,ECjDf,OAA0B,qCCWzC,MAAM/C,GAAYC,IAAOC,IAAGC,QAAAC,YAAA,gqBAkBAsG,IAuDbC,I,2BAAAA,GApCYA,KACzB,MAAOxC,EAAQoB,GAAa1E,mBAAkB,KACvC+F,EAAaC,GAAkBhG,oBAAS,GAGzCiG,EAAeC,uBAAYvB,UAC/B,GAAIwB,EAAMC,OAAQ,CAChBJ,GAAe,GACf,IACE,MAAMpB,OLlDcuB,IACnBtB,IAAMC,IAAG,GAAA7C,OAAoBmC,EAAQ,iBAAiB,CAC3DW,OAAQ,CACNC,QAASd,EACTiC,WK8CyBd,CAAYc,GACnCzB,EAAUE,EAASK,KAAKC,QAC1B,CAAE,MAAOC,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,CACF,MACEa,GAAe,GACftB,EAAU,GACZ,GACC,IAEH,OACE1B,eAAC7D,GAAS,CAACkH,iBAAkBR,GAAQrF,SAAA,CACnCD,cAACZ,EAAS,CAACE,SAAUoG,IACpBF,GAAezC,EAAOM,OAAS,EAC9BrD,cAAC8C,EAAS,CAACC,OAAQA,IAEnBN,eAAAS,WAAA,CAAAjD,SAAA,CACED,cAACkE,EAAc,IACflE,cAACkF,GAAa,IACdlF,cAACqF,GAAc,SAGT,EChFD,OAA0B,uCCuBzC,MAuDMzG,GAAYC,IAAOC,IAAGC,QAAAC,YAAA,irBAmBA+G,GAASA,EAAMD,mBAmBrChF,GAAUjC,IAAOC,IAAGK,QAAAH,YAAA,gGAUpBgH,GAAUnH,IAAOC,IAAG+B,QAAA7B,YAAA,oFAOpByB,GAAS5B,IAAO6B,IAAGK,QAAA/B,YAAA,4GAOnB2B,GAAQ9B,IAAOoH,GAAE/E,QAAAlC,YAAA,2FAMjBkH,GAAMrH,IAAOsH,IAAG/E,QAAApC,YAAA,qSAgBhBoH,GAAavH,YAAOwD,IAAPxD,CAAYyC,QAAAtC,YAAA,8IASzBqH,GAAWxH,IAAO6B,IAAG4F,QAAAtH,YAAA,sFAOrBqC,GAAWxC,IAAO6B,IAAG6F,QAAAvH,YAAA,iEAMZwH,I,GAAAA,GAjKmCnH,IAAkB,IAAjB,QAAEoH,GAASpH,EAC5D,MAAOmC,EAAOkF,GAAYjH,mBAAuB,MAejD,GAbAG,qBAAU,KACR0E,IACGC,IAAI,sCAAD7C,OAAuC+E,GAAW,CACpDjC,OAAQ,CAAEC,QAASb,sCAEpB+C,MAAMtC,IACLqC,EAASrC,EAASK,KAAK,IAExBkC,OAAOhC,IACNC,QAAQD,MAAM,gCAAiCA,EAAM,GACrD,GACH,CAAC6B,KAECjF,EACH,OAAOxB,cAAA,OAAAC,SAAK,eAGd,MAAM8B,EAAcP,EAAMQ,aAAeR,EAAMQ,aAAaC,MAAM,KAAK,GAAK,MACtE4E,EAAWrF,EAAMK,YAAW,kCAAAH,OACIF,EAAMK,aACxCC,EAEEgF,EAAUtF,EAAMuF,QAAO,GAAArF,OACtBF,EAAMuF,QAAO,YAChB,MAEE7E,EAASV,EAAMW,aAAeX,EAAMW,aAAaC,QAAQ,GAAK,MAGpE,OACEK,eAAC7D,GAAS,CAACkH,iBAAkBe,EAAS5G,SAAA,CACpCD,cAACS,GAAM,CAACiC,IAAKmE,EAAUlE,IAAKnB,EAAMoB,QAClCH,eAACuD,GAAO,CAAA/F,SAAA,CACND,cAACW,GAAK,CAAAV,SAAEuB,EAAMoB,QACdH,eAAC3B,GAAO,CAAAb,SAAA,CACND,cAAA,KAAAC,SAAI8B,IACJ/B,cAAA,KAAAC,SAAI6G,IACJ9G,cAAA,KAAAC,SAAIuB,EAAMwF,OAAO5D,KAAK6D,GAAUA,EAAMC,OAAMC,KAAK,QACjD1E,eAAA,KAAAxC,SAAA,CAAGD,cAACqB,GAAQ,CAACqB,IAAKG,EAAMF,IAAI,cAAeT,QAE7ClC,cAAA,KAAAC,SAAIuB,EAAM4F,WACVpH,cAACkG,GAAG,CAAAjG,SACFwC,eAAC2D,GAAU,CAAC9D,GAAG,IAAGrC,SAAA,CAChBD,cAACqG,GAAQ,CAAC3D,IAAK2E,GAAW1E,IAAI,SAAS,mBAKnC,ECrEhB,MAeM/D,GAAYC,IAAOC,IAAGC,QAAAC,YAAA,6CAKbsI,I,SAAAA,GApBaA,KAC1B,MAAM,GAAE3F,GAAO4F,cAEf,OAAK5F,EAMH3B,cAACpB,GAAS,CAAAqB,SACRD,cAACwG,GAAY,CAACC,QAAS9E,MALlB3B,cAAA,OAAAC,SAAK,8BAMA,ECZhB,MAAMuH,GAAkB3I,IAAO4I,OAAM1I,QAAAC,YAAA,wNAY/BoH,GAAavH,YAAOwD,IAAPxD,CAAYM,QAAAH,YAAA,qGAKzB2B,GAAQ9B,IAAOoH,GAAEpF,QAAA7B,YAAA,0GAkBR0I,OAVUA,IAErB1H,cAACwH,GAAe,CAAAvH,SACdD,cAACoG,GAAU,CAAC9D,GAAG,IAAGrC,SAChBD,cAACW,GAAK,CAAAV,SAAC,wBChBA0H,OAZOA,IAElBlF,eAACmF,IAAM,CAACC,SAAS,oBAAmB5H,SAAA,CAClCD,cAAC0H,GAAM,IACPjF,eAACqF,IAAM,CAAA7H,SAAA,CACLD,cAAC+H,IAAK,CAACC,KAAK,IAAIC,QAASjI,cAACuF,GAAQ,MAClCvF,cAAC+H,IAAK,CAACC,KAAK,aAAaC,QAASjI,cAACsH,GAAS,YCGrCY,OAZUC,IACnBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAKtH,IAAkD,IAAjD,OAAEgJ,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASpJ,EACpEgJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECJWO,IAASC,WACpBC,SAASC,eAAe,SAGrBC,OACH9I,cAAC+I,IAAMC,WAAU,CAAA/I,SACfD,cAAC2H,GAAG,OAORO,I","file":"static/js/main.4611d486.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 70px;\r\n  background-color: #373A40;\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  padding: 0 100px;\r\n`;\r\n\r\nconst Searchbar = styled.input`\r\n  width: 30%;\r\n  height: 60%;\r\n  padding: 15px 20px;\r\n  border-radius: 20px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\ninterface SearchBarProps {\r\n  onSearch: (query: string) => void;\r\n}\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = ({ onSearch }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [debouncedTerm, setDebouncedTerm] = useState(searchTerm);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => {\r\n      setDebouncedTerm(searchTerm);\r\n    }, 500); // 500ms debounce\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    onSearch(debouncedTerm);\r\n  }, [debouncedTerm, onSearch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Searchbar\r\n        type=\"text\"\r\n        placeholder=\"Search for a movie...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","export default __webpack_public_path__ + \"static/media/default-poster.3f971516.jpg\";","export default __webpack_public_path__ + \"static/media/star.6f09a733.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { Movie } from '../types/movieTypes';\r\nimport defaultPoster from '../assets/images/default-poster.jpg';\r\nimport Star from '../assets/icons/star.png';\r\n\r\ninterface MovieCardProps {\r\n  movie: Movie;\r\n}\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 250px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 8px;\r\n  object-fit: cover;\r\n  aspect-ratio: 2 / 3;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 1.2em;\r\n  color: #333;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  justify-content: column;\r\n  gap: 20px;\r\n\r\n  p{\r\n  margin: 0;\r\n  }\r\n`;\r\n\r\nconst ReleaseYear = styled.p`\r\n  font-size: 1em;\r\n  color: #666;\r\n`;\r\n\r\nconst Rating = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1em;\r\n  color: #666;\r\n`;\r\n\r\nconst StarIcon = styled.img`\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst MovieCard: React.FC<MovieCardProps> = ({ movie }) => {\r\n  const movieDetailsUrl = `/movie/${movie.id}`;\r\n  const posterUrl = movie.poster_path \r\n    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` \r\n    : defaultPoster;\r\n\r\n  const releaseYear = movie.release_date ? movie.release_date.split('-')[0] : 'N/A';\r\n  const rating = movie.vote_average ? movie.vote_average.toFixed(1) : 'N/A';\r\n\r\n  return (\r\n    <Link to={movieDetailsUrl} style={{ textDecoration: 'none' }}>\r\n      <Card>\r\n        <Poster src={posterUrl} alt={movie.title} />\r\n        <Title>{movie.title}</Title>\r\n        <Details>\r\n          <ReleaseYear>{releaseYear}</ReleaseYear>\r\n          <Rating>\r\n          <StarIcon src={Star} alt=\"star icon\" />\r\n          {rating}\r\n        </Rating>\r\n        </Details>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Movie } from '../types/movieTypes';\r\nimport MovieCard from './MovieCard';\r\n\r\ninterface MovieListProps {\r\n  movies: Movie[];\r\n}\r\n\r\nconst MovieList: React.FC<MovieListProps> = ({ movies }) => {\r\n  const [visibleMovies, setVisibleMovies] = useState(10); // Initial number of movies to show\r\n\r\n  const showMoreMovies = () => {\r\n    setVisibleMovies((prevVisibleMovies) => prevVisibleMovies + 10); // Show more movies when button is clicked\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {movies.slice(0, visibleMovies).map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </Container>\r\n      {visibleMovies < movies.length && (\r\n        <ShowMoreButton onClick={showMoreMovies}>Show More</ShowMoreButton>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  gap: 16px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst ShowMoreButton = styled.button`\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;","import axios from 'axios';\r\nimport { MoviesResponse } from '../types/movieTypes';\r\n\r\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\n// Fetch search results for movies\r\nexport const fetchMovies = (query: string) => {\r\n  return axios.get<MoviesResponse>(`${BASE_URL}/search/movie`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n      query,\r\n    },\r\n  });\r\n};\r\n\r\n// Fetch popular movies\r\nexport const fetchPopularMovies = () => {\r\n  return axios.get<MoviesResponse>(`${BASE_URL}/movie/popular`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n};\r\n\r\n// Fetch upcoming movies\r\nexport const fetchUpcomingMovies = () => {\r\n  return axios.get<MoviesResponse>(`${BASE_URL}/movie/upcoming`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n};\r\n\r\n// Fetch trending movies (often used as featured)\r\nexport const fetchFeaturedMovies = () => {\r\n  return axios.get<MoviesResponse>(`${BASE_URL}/trending/movie/day`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n};\r\n\r\n","// src/components/FeaturedMovies.tsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { fetchFeaturedMovies } from '../API/api'; // Replace this with your actual API call\r\nimport { Movie } from '../types/movieTypes';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst FeaturedMoviesContainer = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nconst FeaturedMoviesTitle = styled.h2`\r\n  text-align: left;\r\n  margin-bottom: 20px;\r\n  padding-left: 80px;\r\n`;\r\n\r\nconst MovieGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst FeaturedMovies: React.FC = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetchFeaturedMovies(); // API call to fetch featured movies\r\n        setMovies(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching featured movies:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const topFiveMovies = movies.slice(0, 5);\r\n\r\n  return (\r\n    <FeaturedMoviesContainer>\r\n      <FeaturedMoviesTitle>Featured Movies</FeaturedMoviesTitle>\r\n      <MovieGrid>\r\n        {topFiveMovies.map(movie => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </MovieGrid>\r\n    </FeaturedMoviesContainer>\r\n  );\r\n};\r\n\r\nexport default FeaturedMovies;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { fetchPopularMovies } from '../API/api';\r\nimport { Movie } from '../types/movieTypes';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst PopularMoviesContainer = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nconst PopularMoviesTitle = styled.h2`\r\n  text-align: left;\r\n  padding-left: 80px;\r\n`;\r\n\r\nconst MovieGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst PopularMovies: React.FC = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetchPopularMovies(); // API call to fetch popular movies\r\n        setMovies(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching popular movies:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  // Slicing the movies array to get only the first 5 movies\r\n  const topFiveMovies = movies.slice(0, 5);\r\n\r\n  return (\r\n    <PopularMoviesContainer>\r\n      <PopularMoviesTitle>Popular Movies</PopularMoviesTitle>\r\n      <MovieGrid>\r\n        {topFiveMovies.map(movie => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </MovieGrid>\r\n    </PopularMoviesContainer>\r\n  );\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { fetchUpcomingMovies } from '../API/api';\r\nimport { Movie } from '../types/movieTypes';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst UpcomingMoviesContainer = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nconst UpcomingMoviesTitle = styled.h2`\r\n  text-align: left;\r\n  padding-left: 80px;\r\n`;\r\n\r\nconst MovieGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst UpcomingMovies: React.FC = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const response = await fetchUpcomingMovies(); // API call to fetch upcoming movies\r\n        setMovies(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching upcoming movies:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const topFiveMovies = movies.slice(0, 5);\r\n\r\n  return (\r\n    <UpcomingMoviesContainer>\r\n      <UpcomingMoviesTitle>Upcoming Movies</UpcomingMoviesTitle>\r\n      <MovieGrid>\r\n        {topFiveMovies.map(movie => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </MovieGrid>\r\n    </UpcomingMoviesContainer>\r\n  );\r\n};\r\n\r\nexport default UpcomingMovies;\r\n","export default __webpack_public_path__ + \"static/media/popcorn.705659fd.avif\";","import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchBar from '../components/SearchBar';\r\nimport MovieList from '../components/MovieList';\r\nimport FeaturedMovies from '../components/FeaturedMovies';\r\nimport PopularMovies from '../components/PopularMovies';\r\nimport UpcomingMovies from '../components/UpcomingMovies';\r\nimport { Movie } from '../types/movieTypes';\r\nimport { fetchMovies } from '../API/api';\r\nimport Popcorn from '../assets/images/popcorn.avif';\r\n\r\nconst Container = styled.div<{ $backgroundImage: string }>`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n  color: white;\r\n  padding-bottom: 50px;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${Popcorn});\r\n    background-size: cover;\r\n    background-position: center;\r\n    filter: blur(10px);\r\n    z-index: -2;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5); /* Dark overlay */\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst HomePage: React.FC = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n\r\n  // Memoize the handleSearch function to prevent it from being recreated on every render\r\n  const handleSearch = useCallback(async (query: string) => {\r\n    if (query.trim()) {\r\n      setHasSearched(true);\r\n      try {\r\n        const response = await fetchMovies(query);\r\n        setMovies(response.data.results);\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n      }\r\n    } else {\r\n      setHasSearched(false);\r\n      setMovies([]); // Clear results if the query is empty\r\n    }\r\n  }, []); // Empty dependency array to memoize the function\r\n\r\n  return (\r\n    <Container $backgroundImage={Popcorn}>\r\n      <SearchBar onSearch={handleSearch} />\r\n      {hasSearched && movies.length > 0 ? (\r\n        <MovieList movies={movies} />\r\n      ) : (\r\n        <>\r\n          <FeaturedMovies />\r\n          <PopularMovies />\r\n          <UpcomingMovies />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export default __webpack_public_path__ + \"static/media/arrow-back.76bc0681.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport defaultPoster from \"../assets/images/default-poster.jpg\";\r\nimport backArrow from \"../assets/icons/arrow-back.svg\";\r\nimport Star from '../assets/icons/star.png';\r\n\r\ninterface MovieDetailsProps {\r\n  movieId: string;\r\n}\r\n\r\ninterface Movie {\r\n  id: number;\r\n  title: string;\r\n  overview: string;\r\n  poster_path: string;\r\n  release_date: string;\r\n  vote_average: number;\r\n  runtime: number;\r\n  genres: { id: number; name: string }[];\r\n}\r\n\r\nconst MovieDetails: React.FC<MovieDetailsProps> = ({ movieId }) => {\r\n  const [movie, setMovie] = useState<Movie | null>(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/movie/${movieId}`, {\r\n        params: { api_key: process.env.REACT_APP_TMDB_API_KEY },\r\n      })\r\n      .then((response) => {\r\n        setMovie(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching movie details:\", error);\r\n      });\r\n  }, [movieId]);\r\n\r\n  if (!movie) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const releaseYear = movie.release_date ? movie.release_date.split('-')[0] : 'N/A';\r\n  const imageUrl = movie.poster_path\r\n    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n    : defaultPoster;\r\n\r\n  const runTime = movie.runtime \r\n    ? `${movie.runtime} minutes` \r\n    : 'N/A';\r\n\r\n  const rating = movie.vote_average ? movie.vote_average.toFixed(1) : 'N/A';\r\n\r\n\r\n  return (\r\n    <Container $backgroundImage={imageUrl}>\r\n      <Poster src={imageUrl} alt={movie.title} />\r\n      <Section>\r\n        <Title>{movie.title}</Title>\r\n        <Details>\r\n          <p>{releaseYear}</p>\r\n          <p>{runTime}</p>\r\n          <p>{movie.genres.map((genre) => genre.name).join(\", \")}</p>\r\n          <p><StarIcon src={Star} alt=\"star icon\" />{rating}</p>\r\n        </Details>\r\n        <p>{movie.overview}</p>\r\n        <Nav>\r\n          <StyledLink to=\"/\">\r\n            <BackIcon src={backArrow} alt=\"Back\" />\r\n            Return\r\n          </StyledLink>\r\n        </Nav>\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div<{ $backgroundImage: string }>`\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 50px 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  gap: 50px;\r\n  align-items: center;\r\n  color: white;\r\n  min-height: 100vh;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.$backgroundImage});\r\n    background-size: cover;\r\n    background-position: center;\r\n    filter: blur(10px);\r\n    z-index: -2;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5); /* Dark overlay */\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 20px;\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  width: 40%;\r\n  padding: 50px 10px;\r\n  z-index: 1;\r\n  text-align: left;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n  width: 30%;\r\n  z-index: 1;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 2em;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  width: 100px;\r\n  display: flex;\r\n  border: white solid 2px;\r\n  padding: 5px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: all 0.3s ease-in-out;\r\n  border-radius: 20px;\r\n  margin-top: 50px;\r\n\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: white;\r\n  text-align: center;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst BackIcon = styled.img`\r\n  width: 18px;\r\n  height: 18px;\r\n  margin-right: 5px;\r\n  padding-top: 4px;\r\n`;\r\n\r\nconst StarIcon = styled.img`\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nexport default MovieDetails;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport MovieDetails from '../components/MovieDetails';\r\nimport styled from 'styled-components';\r\n\r\nconst MoviePage: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  if (!id) {\r\n    // Handle the case where ID is not present or redirect to another page\r\n    return <div>Error: Movie ID not found.</div>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <MovieDetails movieId={id} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport default MoviePage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderContainer = styled.header`\r\n  height: 80px;\r\n  margin: 0;\r\n  padding: 16px 110px;\r\n  background-color: #151515;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: inherit; /* Inherit color from the parent component */\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n  font-size: 1.8em;\r\n  font-family: \"Playfair Display\", serif;\r\n  color: white; \r\n`;\r\n\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <StyledLink to=\"/\">\r\n        <Title>Movie Catalogue</Title>\r\n      </StyledLink>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport MoviePage from './pages/MoviePage';\nimport Header from './components/Header'\n\nconst App: React.FC = () => {\n  return (\n    <Router basename=\"/movie-search-app\">\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/movie/:id\" element={<MoviePage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}